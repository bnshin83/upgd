import matplotlib.pyplot as plt
import numpy as np

plt.rc('text', usetex=True)

# LoP:
# data = np.asarray([
#     [-0.0010700025150180426, 0.0007306937226652654, 0.01880341686010356, 0.017928901151120613, 0.015549612986147376, -0.002348271886706388, 0.023329472237825277, 0.032047600146532074, 0.029078602004349308, 0.023986224199831485],
#     [-0.008714694405926593, -0.000748859457786244, -0.007357639589309739, -0.020843737935102885, -0.013468099539478529, -0.007613156651366748, -0.01987412928521648, 0.02240138812943493, -0.021628898467515686, -0.23038033736254046],
#     [0.0220489320462941, -0.0038815276563167744, 0.17180895723402495, 0.12001800323069095, 0.03196366279184819, 0.005479573608040744, 0.01688035900294793, 0.035948860567212026, 0.11990116058647633, 0.04525534374892698],
#     [-0.009013318013548766, -0.008624672543406653, 0.049672262510061294, 0.048267303098440156, 0.007919970883727076, -0.005195922816395748, -0.005930613126158613, 0.0028010683357714283, 0.09214578449547292, 0.056081657730340906],
# ])


# # CF:
data = np.asarray([
    # [-0.41, -0.44855999999999996, -0.42006000000000004, -0.4200599999999999, -0.2515350000000002, -0.42366499999999996, -0.39767499999999995, -0.3374599999999999, -0.3867849999999999, -0.3450600000000001],
    [-0.4235333333333333, -0.2802615384615385, -0.25922, -0.12655384615384616, -0.20053333333333337, -0.32521818181818185, -0.3793099999999999, -0.4124842105263158, -0.1637052631578948, -0.41113684210526324],
    [-0.6635800000000001, -0.23297999999999994, -0.03953999999999998, -0.07338999999999994, -0.06861999999999999, -0.23399999999999993, -0.5776899999999999, -0.64487, -0.01758999999999998, -0.2463],
    [-0.51199, -0.19834000000000004, -0.12889, -0.05783, 0.04639, -0.17917, -0.4851699999999999, -0.5295799999999998, 0.016439999999999996, -0.19382],
])


data *= 100

###########################
# Output-Permuted ImageNet:
###########################
# upgd_fo_global -0.009013318013548766 -0.51199
# upgd_nonprotecting_fo_global -0.008624672543406653 -0.19834000000000004
# sgd 0.049672262510061294 -0.12889
# pgd 0.048267303098440156 -0.05783
# adam 0.007919970883727076 0.04639
# shrink_and_perturb -0.005195922816395748 -0.17917
# online_ewc -0.005930613126158613 -0.4851699999999999
# mas 0.0028010683357714283 -0.5295799999999998
# si_new 0.09214578449547292 0.016439999999999996
# rwalk 0.056081657730340906 -0.19382


#########################
# Output-Permuted EMNIST:
#########################
# upgd_fo_global 0.0220489320462941 -0.6635800000000001
# upgd_nonprotecting_fo_global -0.0038815276563167744 -0.23297999999999994
# sgd 0.17180895723402495 -0.03953999999999998
# pgd 0.12001800323069095 -0.07338999999999994
# adam 0.03196366279184819 -0.06861999999999999
# shrink_and_perturb 0.005479573608040744 -0.23399999999999993
# online_ewc 0.01688035900294793 -0.5776899999999999
# mas 0.035948860567212026 -0.64487
# si_new 0.11990116058647633 -0.01758999999999998
# rwalk 0.04525534374892698 -0.2463


##########################
# Output-Permuted CIFAR10:
##########################
# upgd_fo_global -0.008714694405926593 -0.4235333333333333
# upgd_nonprotecting_fo_global -0.000748859457786244 -0.2802615384615385
# sgd -0.007357639589309739 -0.25922
# pgd -0.020843737935102885 -0.12655384615384616
# adam -0.013468099539478529 -0.20053333333333337
# shrink_and_perturb -0.007613156651366748 -0.32521818181818185
# online_ewc -0.01987412928521648 -0.3793099999999999
# mas 0.02240138812943493 -0.4124842105263158
# si_new -0.021628898467515686 -0.1637052631578948
# rwalk -0.23038033736254046 -0.41113684210526324


#######################
# Input-Permuted MNIST:
#######################
# upgd_fo_global -0.0010700025150180426 -0.41
# sgd 0.01880341686010356 -0.42006000000000004
# pgd 0.017928901151120613 -0.4200599999999999
# adam 0.015549612986147376 -0.2515350000000002
# upgd_nonprotecting_fo_global 0.0007306937226652654 -0.44855999999999996
# shrink_and_perturb -0.002348271886706388 -0.42366499999999996
# online_ewc 0.023329472237825277 -0.39767499999999995
# mas 0.032047600146532074 -0.3374599999999999
# si_new 0.029078602004349308 -0.3867849999999999
# rwalk 0.023986224199831485 -0.3450600000000001

# Define the color scheme for the heat map
cmap = plt.cm.RdBu
cmap = cmap.reversed()

# Create the figure and axis objects
fig, ax = plt.subplots()

# Create the heat map
vmin = data.min()
vmax = data.max()

# heatmap = ax.imshow(data, cmap=cmap, vmin=-2.5, vmax=6)
heatmap = ax.imshow(data, cmap=cmap, vmin=vmin, vmax=vmax)

# Add text to the cells of the heat map
for i in range(data.shape[0]):
    for j in range(data.shape[1]):
        text = ax.text(j, i, '{:.2f}'.format(data[i, j]), ha='center', va='center', color='k')


# Add a color bar to the heat map
# cbar = ax.figure.colorbar(heatmap, ax=ax, shrink=0.4)
cbar = ax.figure.colorbar(heatmap, ax=ax, shrink=0.3)

# Set the axis labels and title
ax.set_xticks(np.arange(data.shape[1]))
ax.set_yticks(np.arange(data.shape[0]))

ax.set_xticklabels(['UPGDW', 
                    'N-UPGDW', 
                    'SGD',
                    'PGD',
                    'Adam',
                    r'S\&P',
                    'S-EWC',
                    'S-MAS',
                    'S-SI', 
                    'S-RWalk'])
ax.set_yticklabels([
                    # 'I/P MNIST', 
                    'L/P CIFAR10',
                    'L/P EMNIST',
                    'L/P mini-ImageNet'])

# Rotate the x-axis labels
plt.setp(ax.get_xticklabels(), rotation=45, ha="right", rotation_mode="anchor")

plt.savefig('heat_map.pdf', bbox_inches='tight')
# Show the plot
plt.show()